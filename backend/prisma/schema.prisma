generator client {
  provider = "prisma-client-js"
  output   = "../backend/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int         @id @default(autoincrement())
  username    String
  email       String      @unique
  password    String
  questions   Question[]  // One user can ask many questions
  answers     Answer[]    // One user can write many answers
  notifications Notification[] // One user can receive many notifications
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Question {
  id            Int           @id @default(autoincrement())
  title         String
  content       String
  upvotes       Int           @default(0)
  downvotes     Int           @default(0)
  user          User          @relation(fields: [userId], references: [id])
  userId        Int
  answers       Answer[]
  tags          Tag[]         @relation("QuestionTags") // ✅ remove references
  notifications Notification[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Tag {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  questions   Question[]  @relation("QuestionTags") // ✅ same relation name, no references
}


model Answer {
  id          Int         @id @default(autoincrement())
  content     String
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  question    Question    @relation(fields: [questionId], references: [id])
  questionId  Int
  createdAt   DateTime    @default(now())
  upvotes   Int      @default(0)
  downvotes Int      @default(0)
  updatedAt   DateTime    @updatedAt
}

model Notification {
  id          Int         @id @default(autoincrement())
  message     String
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  question    Question?   @relation(fields: [questionId], references: [id])
  questionId  Int?
  isRead      Boolean     @default(false)
  createdAt   DateTime    @default(now())
}
